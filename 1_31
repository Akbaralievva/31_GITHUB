//
//  ContentView.swift
//  login
//
//  Created by A LINA on 26/11/23.
//

import SwiftUI

struct ContentView: View {
    
@State var index=0
    
    var body: some View {
        
        
//        GeometryReader { geo in
//            ZStack{
//                Image("black")
//                    .resizable()
//                    .scaledToFill()
//                   .edgesIgnoringSafeArea(.all)
//                    .frame(width:geo.size.width,height:
//                            geo.size.height,alignment:.center)
//                    .opacity(1.0)
//
//            }} . padding()
//            .edgesIgnoringSafeArea(.all)
//        
        ZStack{
            SignUp(index:self.$index)
                .zIndex(Double(self.index))
            Login(index: self.$index)
            ZStack{
                        SignUp(index:self.$index)
                            .zIndex(Double(self.index))
                        Login(index: self.$index)
                        
                    }
                    
                    .background(Color.black) // Устанавливаем черный цвет фона
                            .edgesIgnoringSafeArea(.all)
//            
        }
        
        
        
        .edgesIgnoringSafeArea(.all)
        
        
       
        
        
        HStack(spacing:15){
            Rectangle()
                .fill(Color.black)
                .frame(height: 1)
            
            Text("OR")
            
            Rectangle()
                .fill(Color.black)
                .frame(height: 1)
        }.padding(.horizontal,30)
            .padding(.top,50)
        
        
            
        .padding()
    }
}




struct CShape: Shape{
    func path(in rect:CGRect)->Path{
        return Path{path in
            path.move(to:CGPoint(x:rect.width,y:120))
            path.addLine(to:CGPoint(x:rect.width,y: rect.height))
            path.addLine(to:CGPoint(x:0,y:rect.height))
            path.addLine(to:CGPoint(x:0,y:0))
                                
            
            
        }
        
    }
}


struct CShape1: Shape{
    func path(in rect:CGRect)->Path{
        return Path{path in
            path.move(to:CGPoint(x:0,y:120))

            path.addLine(to:CGPoint(x:0,y: rect.height))
            path.addLine(to:CGPoint(x:rect.width,y:rect.height))
            path.addLine(to:CGPoint(x:rect.width,y:0))
                                
            
            
        }
    }
}

struct Login : View{
    @State var email=""
    @State var pass=""
    @Binding var index:Int
    
    var body: some View{
        ZStack(alignment : .bottom){
            VStack{
                HStack{
                    VStack(spacing:10){
                        Text("Login")
                            .foregroundColor(self.index==0 ? .white: .gray)
                            .font(.title)
                            .fontWeight(.bold)
                        
                        Capsule()
                            .fill(self.index==0 ? Color.blue: Color.clear)
                            .frame(width:100,height: 5)
                        
                        
                        
                        
                        
                        
                    }
                    Spacer()
                }.padding(.top,40)
                VStack{
                    HStack(spacing:15){
                        Image(systemName: "Alina")
                            .foregroundColor(.blue)
                        TextField("Email Address",text:self.$email)
                    }
                    Divider()
                        .background(Color.black.opacity(0.5))
                } .padding(.horizontal)
                    .padding(.top,40)
                
                VStack{
                    HStack(spacing:15){
                        Image(systemName: "Alina")
                            .foregroundColor(.blue)
                        TextField("password",text:self.$pass)
                    }
                    Divider()
                        .background(Color.black.opacity(0.5))
                } .padding(.horizontal)
                    .padding(.top,40)
                
                
                
                HStack{
                    Spacer(minLength: 0)
                    
                    Button(action:{
                        //
                    })
                    {
                        Text("Forget Password?")
                            .foregroundColor(Color.white.opacity(0.5))
                    }
                }.padding(.horizontal)
                    .padding(.top,30)
                
                
            }.padding()
                .padding(.bottom,65)
                .background(Color(.purple))
                .clipShape(CShape())
                .contentShape(CShape())
                .shadow(color: Color.black.opacity(0.3),radius: 5,x:0, y:-5)
                .onTapGesture{
                    self.index=0
                }
                .cornerRadius(35)
                .padding(.horizontal,0)
            
            
            Button(action:{
                //
            }){
                Text("LOGIN")
                    .foregroundColor(.black)
                    .fontWeight(.bold)
                    .padding(.vertical)
                    .padding(.horizontal,50)
                    .background(Color.white)
                    .clipShape(Capsule())
                    .shadow(color:Color.white.opacity(0.1),radius:5,x:0,y:-5)
            }
            .offset(y:35)
            .opacity(self.index==0 ? 1:0)
            
                }
            
        
        }
        
        
    }








struct SignUp: View{
    @State var email=""
    @State var pass=""
    @State var Repass=""
    @Binding var index:Int
    
    
    var body: some View{

        ZStack(alignment: .bottom){
            VStack{
                HStack{
                    Spacer(minLength: 0)
                    
                    VStack(spacing:10){
                        Text("SignUp")
                            .foregroundColor(self.index==1 ? .white: .gray)
                            .font(.title)
                            .fontWeight(.bold)
                        
                        Capsule()
                            .fill(self.index==1 ? Color.blue : Color.clear)
                            .frame(width: 100,height: 5)
                    }
                }.padding(.top,40)
                
                
                
                
                VStack{
                    HStack(spacing: 15){
                        Image(systemName: "envelope.fill")
                            .foregroundColor(Color("Color1"))
                        TextField("Email Addres",text:self.$email)
                    }
                    Divider().background(Color.black.opacity(0.5))
                    
                    }
                .padding(.horizontal)
                .padding(.top,40)
                
                
                
                
                VStack{
                    HStack(spacing: 15){
                        Image(systemName: "eye.slash.fill")
                            .foregroundColor(Color("color1"))
                        SecureField("Password",text: self.$pass)
                    }
                    Divider()
                        .background(Color.black.opacity(0.5))
                }.padding(.horizontal)
                    .padding(.top,30)
                
                
                
            
                
                VStack{
                    HStack(spacing: 15) {
                        Image(systemName: "eye.slash.fill")
                            .foregroundColor(Color("color1"))
                        SecureField("Password",text: self.$Repass)
                        
                    }
                    Divider().background(Color.black.opacity(0.5))
                }.padding(.horizontal)
                    .padding(.top,40)
            } .padding()
                .padding(.bottom,65)
            
                .background(Color.purple)
                .clipShape(CShape1())
                .contentShape(CShape1())
                .shadow(color: Color.black.opacity(0.3),radius: 5,x:0,y:-5)
                .onTapGesture {
                    self.index=1
                }.cornerRadius(50)
            
            Button(action:{
                //
            }){
                Text("SIGN UP")
                    .foregroundColor(.black)
                    .fontWeight(.bold)
                    .padding(.vertical)
                    .padding(.horizontal,50)
                    .background(Color.white)
                    .clipShape(Capsule())
                    .shadow(color:Color.white.opacity(0.1),radius:5,x:0,y:-5)
            }
            .offset(y:40)
            .opacity(self.index==1 ? 1:0)
            
        }
        
    }
    
}

    
#Preview {
    ContentView()
}



































